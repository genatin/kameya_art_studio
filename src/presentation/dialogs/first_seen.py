from aiogram.types import CallbackQuery, ContentType
from aiogram_dialog import Dialog, DialogManager, Window
from aiogram_dialog.api.entities import MediaAttachment, ShowMode
from aiogram_dialog.widgets.kbd import Button
from aiogram_dialog.widgets.media import DynamicMedia
from aiogram_dialog.widgets.text import Const

from src.application.models import UserDTO
from src.config import get_config
from src.infrastracture.adapters.repositories.repo import GspreadRepository
from src.presentation.dialogs.states import BaseMenu, FirstSeen

_REPOSITORY = "repository"


async def getter_first_seen_video(**kwargs):
    return {
        "video": MediaAttachment(
            ContentType.VIDEO, path=get_config().WELCOME_VIDEO_PATH
        )
    }


async def add_user_firstly(cq: CallbackQuery, _, manager: DialogManager):
    repository: GspreadRepository = manager.middleware_data[_REPOSITORY]
    await repository.user.add_user(
        UserDTO(id=cq.from_user.id, nickname="@" + cq.from_user.username)
    )
    await manager.start(BaseMenu.START, show_mode=ShowMode.SEND)


first_seen_dialog = Dialog(
    Window(
        DynamicMedia("video"),
        Const(
            "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ üé®‚ú®\n–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π –∞—Ä—Ç-—Å—Ç—É–¥–∏–∏ –ö–∞–º–µ—è! –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã, —É—Ä–æ–∫–∏ –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –¥–ª—è –ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è."
        ),
        Button(Const("–ü–æ–µ—Ö–∞–ª–∏!"), id="first_seend", on_click=add_user_firstly),
        state=FirstSeen.START,
        getter=getter_first_seen_video,
    )
)
